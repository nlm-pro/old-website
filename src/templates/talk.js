import React from 'react';
import _ from 'lodash';
import moment from 'moment-strftime';

import { graphql } from 'gatsby';
import { Layout } from '../components/index';
import { RichText } from 'prismic-reactjs';

/*
 * TODO: remove this lame siteMetadata workaround
 *
 * gatsby-source-prismic-graphql has its own createPages
 * The Layout generated by Stackbit requires the siteMetadata
 * but those are passed by createPages in gatsby-node.
 * I need to investigate more further what and how Stackbit
 * could update in order to refact this.
 */
export const query = graphql`
  query TalkQuery($uid: String) {
    prismic {
      allTalks(uid: $uid) {
        edges {
          node {
            abstract {
              ... on PRISMIC_Abstract {
                title
                body
                description
                type
              }
            }
            date
            event_name
            event_url {
              ... on PRISMIC__ExternalLink {
                url
              }
            }
            slides {
              ... on PRISMIC__ExternalLink {
                url
              }
            }
            video {
              ... on PRISMIC__ExternalLink {
                url
              }
            }
          }
        }
      }
    }
    site {
      siteMetadata {
        layout_style
        palette
        header {
          title
          tagline
          profile_img
          bg
          has_nav
          has_social
        }
        footer {
          content
          links {
            text
            url
            new_window
          }
        }
        title
      }
    }
  }
`;

const Talk = ({ talk }) => {
  if (!talk) return null;
  return (
    <article className="post post-full">
      <header className="post-header">
        <h1 className="post-title underline">{RichText.asText(talk.node.event_name)}</h1>
      </header>
      {_.get(talk, 'node.abstract.title') && <div className="post-subtitle">{RichText.render(talk.node.abstract.title)}</div>}
      {_.get(talk, 'node.abstract.body') && <div className="post-content">{RichText.render(talk.node.abstract.body)}</div>}
      <footer className="post-meta">
        <time dateTime={moment(_.get(talk, 'node.date')).strftime('%Y-%m-%d %H:%M')} className="published">
          {moment(_.get(talk, 'node.date')).strftime('%B %d, %Y - %H:%M')}
        </time>
      </footer>
    </article>
  );
};

export default class extends React.Component {
  render() {
    const { data, ...props } = this.props;
    const talk = data.prismic.allTalks.edges.slice(0, 1).pop();
    props.pageContext.site = data.site;
    return (
      <Layout {...this.props}>
        <Talk talk={talk} />
      </Layout>
    );
  }
}
